timelines:
  tools:
    - 'sleuthkit'
    - 'plaso-tools'
  cheat_sheet:
    - description: 'create disk timeline (files/folders and deleted ones) with sleuthkit'
      command: 'fls -{F,D}rph{u,d} -m ''/''  disk.raw | tee fls_{files,folders}_{allocated,deleted}.body'
    - description: 'convert body file to csv'
      command: 'mactime -d -y -b fls_files.body | tee mactime_timeline_files.csv'
    - description: 'create disk timeline (files/folders and deleted ones) with log2timeline'
      command: 'log2timeline --parsers mft --storage-file l2t_mft.plaso disk.raw && psort -o l2tcsv -w l2t_mft.csv l2t_mft.plaso'
    - description: 'compute md5 of all files'
      command: 'find . -type f -exec md5sum {} \; > ../md5_all_files.csv && sed -i ''s/\s\+/,/'' forensic/md5_all_files.csv'
    - description: 'prepare known goods (OS and Office Suite related files) from NSRL db'
      command: 'py_facs scripts nsrl prepare --os <operating system> -n <NSRL iso mount point> -d <outdir>'
    - description: 'thin disk timeline based on a NSRL db'
      command: 'py_facs scripts nsrl prepare --body <fls_w_md5.body> --nsrl <nsrl_os.csv> -d <outdir>'

known_bads:
  tools:
    - 'yara'
    - 'clamscan'
    - 'nsrl'

  cheat_sheet:
    - description: 'Check files against clamav db'
      command: 'fresclam --show-progress && clamscan -r --alert-macros=yes --infected --log=clamav_infected.txt <mount_point>'
    - description: 'Check disk against a set of yara rules'
      command: 'yara -r ruleset.yara <mount point>'
    - description: 'Discard OS and office files from a disk timeline'
      command: 'py_facs script nsrl prepare, then py_facs nsrl thin'
        
windows:
  tools:
    - 'libvshadow'
    - 'sleuthkit'
    - 'https://github.com/poorbillionaire/usn-journal-parser'
    - 'regipy (python module)'
    - 'plaso-tools'
    - 'libscca'

  cheat_sheet:
    - description: 'identify VSC (Volume Shadow Copy)'
      command: 'vshadowinfo -o <partition offset> disk.raw'
    - description: 'mount VSC device'
      command: 'vshadowmount -o <partition offset> disk.raw /tmp/fuse'
    - description: 'mount VSC'
      command: 'mount -o ro,loop,show_sys_files,streams_interface=windows /tmp/fuse/vssX <mount_point>'
    - description: 'parse $Extend\$UsnJournal:$J with plaso'
      command: 'usnjrnal parser WIP'
    - description: 'extract $Extend\$UsnJournal:$J (determine inode from fls output)'
      command: 'icat -h -o <partition sector offset> disk.raw <inode> > usnjrnl.dat'
    - description: 'parse $Extend\$UsnJournal:$J'
      command: 'python3 usn.py -c -f usnjrnl.dat -o usnjrnl.csv'
    - description: 'clean dirty hives (SOFTWARE, SYSTEM, SAM, NTUSER.DAT, USRCLASS.DAT)'
      command: 'registry-transaction-logs <hive> -p <hive>.LOG1 -s <hive>.LOG2 -o <hive>_CLEAN'
    - description: 'dump all registries (SOFTWARE hive is big and can take up to 2 hours)'
      command: 'registry-dump -o registries.json <path to clean hives>'
    - description: 'Create windows events timeline of a host with plaso'
      command: 'log2timeline --parsers winevtx --storage-file l2t_evtx.plaso </evtx/folder> && psort -o json_line -w l2t_evtx.json l2t_evtx.plaso'
    - description: 'Extract info from prefetch'
      command: 'log2timeline --parsers prefetch --storage-file l2t_prefetch.plaso </prefetch/folder> && psort -o json_line -w l2t_prefetch.json l2t_prefetch.plaso'