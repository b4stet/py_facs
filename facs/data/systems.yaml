unix:
  references:
    - 'https://refspecs.linuxfoundation.org/FHS_3.0/fhs-3.0.pdf'
    - 'https://linoxide.com/'

  notes:
    - 'boot sequence: load kernel into memory with boot loder (LILO, GRUB, ...) from boot device and using kernel image specified in /boot'
    - 'system initialisation with SystemV: runs /sbin/init (runlevel and startup scripts under /etc/rc.d/, logs through dmesg)'
    - 'system initialisation with SystemD: load units to bring the system up to the configured target state (units and targets configured using systemctl, logs through journalctl)'
    - 'inspect process behind a connection: netstat -laputen, or lsof -i tcp:<port>'
  
  ext:
    - name: 'metadata layer'
      description: 'inode, with macb, owner, permissions, pointers to data block (ext2/3) or extents (ext4)'
    - name: 'data blocks layer'
      description: 'direct pointers for the first 48Ko, then indirect pointers'

windows:
  references:
    - 'http://ntoskrnl.org'
    - 'https://www.ntfs.com/index.html'
    - 'https://cyberforensicator.com/2018/03/25/windows-10-time-rules/'
    - 'https://www.sans.org/security-resources/posters/windows-forensic-analysis/170/download'
  ntfs:
    - name: 'metafiles'
      description: 'organise the NTFS file system (for forensic: $MFT, $UsnJrnl, $LogFile'
    - name: '$MFT metafile'
      description: 'records info for each file and folder'
    - name: '$AttrDef metafile'
      description: 'metafile listing avaialable attributes'
    - name: '$STD_INFO attribute'
      description: 'owner, permissions, last USN index, timestamps but subject to timestomping (user level). displayed in explorer'
    - name: '$FILE_NAME attribute'
      description: 'filename, size, timestamps. modified by kernel. timestamp updated when filename changed'
    - name: '$DATA attribute'
      description: 'data runs pointer or file itself if small enough. can be multiple if ADS.'
    - name: '$LogFile metafile'
      description: 'records sequence of operations on attributes (not content). fixed size 64MB'
    - name: '$Extend\$UsnJournal:$J ADS'
      description: 'stands for Update Sequence Number Journal, equivalent to logfile'
    - name: 'resident attribute'
      description: 'when value is stored in the MFT record (like $STD_INFO, $FILE_NAME)'
    - name: 'non resident attribute'
      description: 'when value is not stored in the MFT record (like $DATA for big files)'
    - name: 'data block (aka cluster)'
      description: 'usually 4KB = 8 sectors, state (un)allocated'
    - name: 'storage'
      description: 'files always start at the beginning of a cluster. end of sector zeroed, end of cluster not zeroed (slack space)'
    - name: 'macb rules'
      description: 'M(odified, content), A(ccess, noatime by default bc of AV/Explorer), C(hanged, meta), B(irth). created > modified means copy'
    - name: 'alternate data stream (ADS)'
      description: 'filename.ext:<ads>, in same $MFT record. famous one: Zone.Identifier'
    - name: 'volume shadow copy (VSC)'
      description: 'snapshot of files and volumes, stored in System Volume Information, changes monitored by 16K blocks'
  fat:
    - name: 'fat12/16/32'
      description: 'number of bits used for addresses'
    - name: 'exfat'
      description: 'fat32 which overcome 4GB/file limit'
    - name: 'fat table'
      description: 'state of each data block (allocated with next block for a file, unallocated, reserved, bad sectors)'

general:
  - name: 'hard link'
    description: '2 inodes, same data blocks'
  - name: 'soft link'
    description: 'link only contains a pointer to the file. so 2 inodes, 2 data blocks'