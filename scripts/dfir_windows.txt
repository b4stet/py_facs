# under construction

mkdir -p malware_detection/clamav
mkdir -p malware_detection/yara
freshclam --show-progress && clamscan -r --alert-macros=yes --infected --log=./malware_detection/clamav/clamav_infected.txt <mount_point>
yara -r -p 6 ruleset.yara <mount point> | tee malware_detection/yara/yara_infected.txt

mkdir -p carving/bulk_disk
mkdir -p carving/bulk_pagefile
mkdir -p carving/ntfsundelete
bulk_extractor -o carving/bulk_disk -x all -e base64 -e gzip -e zip -e rar -e hyberfile -e httplogs -e pdf -e evtx -e winlnk -e winpe -e winprefetech disk.raw
bulk_extractor -o carving/bulk_disk -x all -e base64 -e gzip -e zip -e rar -e hyberfile -e httplogs -e pdf -e evtx -e winlnk -e winpe -e winprefetech hyberfil.sys
bulk_extractor -o carving/bulk_disk -x all -e base64 -e gzip -e zip -e rar -e httplogs -e pdf -e evtx -e winlnk -e winpe -e winprefetech Windows/memory.dmp
bulk_extractor -o carving/bulk_pagefile -x all -e base64 -e gzip -e zip -e rar -e httplogs -e pdf -e winpe pagefile.sys
ntfsundelete /dev/loopX -s -p 100 -m "<pattern.ext>" -t 1m
ntfsundelete /dev/loopX -i <inode> -d carving/ntfsundelete

mkdir -p misc
find <mount point> -type f -size +10M -exec ls -lh {} \; > misc/bigger_than_10M.txt
find <mount point> -type f -mtime -30 -exec ls -lh {} \; > misc/modified_last_30d.txt
find Users/ -type f | egrep -i '\.(ps1|bat|vba|vbs|dll|exe|msi|hta)' > misc/userprofile_binaries_scripts.txt
find . -type f -name '*:Zone.Identifier' > misc_zone_identifier.txt

mkdir -p tsk
fls -rph -m '/' disk.raw | tee tsk/fls.body
mactime -d -y -b tsk/fls.body | tee tsk/fls.csv
cat tsk/fls.csv | grep -Fif wordlist_windows_disk.txt > tsk/grep_wordlist_disk.txt
cat tsk/fls.csv | grep -Fif wordlist_windows_execution.txt > tsk/grep_wordlist_execution.txt

icat -h -o <partition sector offset> disk.raw <inode> > tsk/usnjrnl.dat
usn.py -c -f tsk/usnjrnl.dat -o tsk/usnjrnl.csv

mkdir -p l2t
docker run -it --rm -u $(id -u $USER):$(id -g $USER) -v $PWD/mnt/:/data_src:ro -v $PWD/l2t:/data_dst plaso-tools log2timeline --parsers win_timeline --data /data_dst/ --process_archives --partitions all --status-view linear --logfile /data_dst/l2t_timeline.log.gz --debug --storage-file /data_dst/l2t_timeline.plaso "$disk_raw"
docker run -it --rm -u $(id -u $USER):$(id -g $USER) -v $PWD/l2t:/data_dst plaso-tools pinfo -v --output_format text -w /data_dst/pinfo_timeline.txt /data_dst/l2t_timeline.plaso
docker run -it --rm -u $(id -u $USER):$(id -g $USER) -v $PWD/l2t:/data_dst plaso-tools psort --status-view linear --debug --logfile /data_dst/psort_timeline.log.gz -o json_line -w /data_dst/l2t_timeline.ndjson /data_dst/l2t_timeline.plaso

docker run -it --rm -u $(id -u $USER):$(id -g $USER) -v $PWD/mnt/:/data_src:ro -v $PWD/l2t:/data_dst plaso-tools log2timeline --parsers win_static --data /data_dst/ --process_archives --status-view linear --logfile /data_dst/l2t_static.log.gz --debug --storage-file /data_dst/l2t_static.plaso "$disk_raw"
docker run -it --rm -u $(id -u $USER):$(id -g $USER) -v $PWD/l2t:/data_dst plaso-tools pinfo -v --output_format text -w /data_dst/pinfo_static.txt /data_dst/l2t_static.plaso
docker run -it --rm -u $(id -u $USER):$(id -g $USER) -v $PWD/l2t:/data_dst plaso-tools psort --status-view linear --debug --logfile /data_dst/psort_static.log.gz -o json_line -w /data_dst/l2t_static.ndjson /data_dst/l2t_static.plaso

docker run -it --rm -u $(id -u $USER):$(id -g $USER) -v $PWD/mnt/:/data_src:ro -v $PWD/l2t:/data_dst plaso-tools log2timeline --parsers win_web_and_cloud --data /data_dst/ --process_archives --status-view linear --logfile /data_dst/l2t_web_cloud.log.gz --debug --storage-file /data_dst/l2t_web_cloud.plaso "$disk_raw"
docker run -it --rm -u $(id -u $USER):$(id -g $USER) -v $PWD/l2t:/data_dst plaso-tools pinfo -v --output_format text -w /data_dst/pinfo_web_cloud.txt /data_dst/l2t_web_cloud.plaso
docker run -it --rm -u $(id -u $USER):$(id -g $USER) -v $PWD/l2t:/data_dst plaso-tools psort --status-view linear --debug --logfile /data_dst/psort_web_cloud.log.gz -o json_line -w /data_dst/l2t_web_cloud.ndjson /data_dst/l2t_web_cloud.plaso

mkdir -p hives
registry-transaction-logs <hive> -p <hive>.LOG1 -s <hive>.LOG2 -o hives/<hive>_CLEAN
registry-dump -o registries.json hives/

mkdir -p facs
py_fair scripts windows extract_evtx -d facs -e "$evtx_path"
py_fair scripts windows merge_timelines --timeline_evtx fair/evtx.ndjson --timeline_plaso l2t/l2t_timeline_nonull_timestamp.ndjson --timeline_fls tsk/fls.csv -d fair/ 
