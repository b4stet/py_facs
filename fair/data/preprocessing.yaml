timelines:
  tools:
    - 'sleuthkit'
    - 'plaso-tools'
  cheat_sheet:
    - description: 'create disk timeline (files/folders and deleted ones) with sleuthkit'
      command: 'fls -{F,D}rph{u,d} -m ''/''  disk.raw | tee fls_{files,folders}_{allocated,deleted}.body'
    - description: 'convert body file to csv'
      command: 'mactime -d -y -b fls_files.body | tee mactime_timeline_files.csv'
    - description: 'create disk timeline (files/folders and deleted ones) with log2timeline'
      command: 'log2timeline --parsers mft --storage-file l2t_mft.plaso disk.raw && psort -o l2tcsv -w l2t_mft.csv l2t_mft.plaso'
    - description: 'Create windows events timeline of a host with py_fair'
      command: 'py_fair scripts windows extract_evtx -e <evtx/folder> -d <output/folder>'
    - description: 'Create timeline of a host with plaso'
      command: 'log2timeline --parsers win_timeline --data scripts/l2t/ --storage-file l2t.plaso disk.raw && psort -o json_line -w l2t.ndjson l2t.plaso'

known_bads:
  tools:
    - 'yara'
    - 'clamscan'
    - 'nsrl'

  cheat_sheet:
    - description: 'Check files against clamav db'
      command: 'freshclam --show-progress && clamscan -r --alert-macros=yes --infected --log=clamav_infected.txt <mount_point>'
    - description: 'Check disk against a set of yara rules'
      command: 'yara -r ruleset.yara <mount point>'
    - description: 'prepare known goods (OS and Office Suite related files) from NSRL db'
      command: 'py_fair scripts nsrl prepare --os <operating system> -n <NSRL iso mount point> -d <outdir>'
    - description: 'thin disk timeline based on a NSRL db'
      command: 'py_fair scripts nsrl thin --body <fls_w_md5.body> --nsrl <nsrl_os.csv> -d <outdir>'
        
windows:
  tools:
    - 'libvshadow'
    - 'sleuthkit'
    - 'https://github.com/poorbillionaire/usn-journal-parser'
    - 'regipy (python module)'
    - 'plaso-tools'
    - 'libscca'

  cheat_sheet:
    - description: 'extract $Extend\$UsnJournal:$J (determine inode from fls output)'
      command: 'icat -h -o <partition sector offset> disk.raw <inode> > usnjrnl.dat'
    - description: 'parse $Extend\$UsnJournal:$J'
      command: 'python3 usn.py -c -f usnjrnl.dat -o usnjrnl.csv'
    - description: 'clean dirty hives (SOFTWARE, SYSTEM, SAM, NTUSER.DAT, USRCLASS.DAT)'
      command: 'registry-transaction-logs <hive> -p <hive>.LOG1 -s <hive>.LOG2 -o <hive>_CLEAN'
    - description: 'dump all registries (SOFTWARE hive is big and can take up to 2 hours)'
      command: 'registry-dump -o registries.json <path to clean hives>'
    - description: 'profile a host with py_fair'
      command: 'py_fair scripts windows profile_host -o csv -e evtx.ndjson --hsystem <system hive> --hsoftware <software hive> --hsam <sam hive> -d <output/folder>'
    - description: 'profile users with py_fair'
      command: 'py_fair scripts windows profile_users -o csv -d <output/folder> --hsystem <system hive> --huser <ntuser1.dat username1> --huser <ntuser2.dat username2>'
    - description: 'Extract not-timestamped artifacts with plaso'
      command: 'log2timeline --parsers win_no_timeline --data scripts/l2t/ --process_archives --storage-file l2t.plaso disk.raw && psort -o json_line -w l2t.ndjson l2t.plaso'
    - description: 'Extract prefetch with plaso'
      command: 'log2timeline --parsers prefetch --storage-file l2t_prefetch.plaso </prefetch/folder> && psort -o json_line -w l2t_prefetch.json l2t_prefetch.plaso'
    - description: 'Extract info from prefetch'
      command: 'py_fair scripts windows analyze_prefetchs -d <output/folder> -o csv -p l2t_prefetch.json'
    - description: 'look for known suspicious filenames on disk (LotL, old privesc tricks, attacker toolbox, ...)'
      command: 'grep -Fif wordlist_windows_disk.txt'
    - description: 'look for known suspicious executions in the time frame'
      command: 'grep -Fif wordlist_windows_execution.txt'
    - description: 'look for unusual binary types in user profile'
      command: 'egrep -i ''\.(ps1|bat|vba|vbs|dll|exe|msi|hta)'''
    - description: 'databases to check hashes against'
      command: 'virustotal, py_fair scripts nsrl, any.run, hybrid-analysis, tria.ge, labs.inquest.net'

